from .node import Node
import numpy as np


class ShapesBoard(object):
    def __init__(self):
        self._board = []
        self.color_id_map = {0: "BLUE", 1: "GREEN", 2: "PINK", 3: "ORANGE", 4: "EMPTY"}
        self.width = 7
        self.height = 9

    def init_board(self):
        for i in range(self.width):
            column = []
            for j in range(self.height):
                node = Node(up=None, down=None, left=None, right=None, color_id=0, x=j, y=i)
                column.append(node)
            self._board.append(column)

        for i in range(self.width):
            for j in range(self.height):
                node = self._board[i][j]
                node.up = self._board[i][j-1] if j > 0 else None
                node.down = self._board[i][j+1] if j < self.height - 1 else None
                node.left = self._board[i-1][j] if i > 0 else None
                node.right = self._board[i+1][j] if i < self.width - 1 else None

    def get_board_as_vec(self):
        vec = np.zeros(self.width*self.height)
        
        for i in range(self.width):
            column = self._board[i]
            start = i*self.height
            stop = start + self.width
            vec[start:stop] = column

        return vec

    def click_cell(self, cell_num):
        x = cell_num // self.height
        y = cell_num % self.height
        node = self._board[y][x]


